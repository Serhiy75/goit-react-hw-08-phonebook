{"version":3,"file":"static/js/293.af3da459.chunk.js","mappings":"gMACA,EAAwB,2BAAxB,EAA4D,4BAA5D,EAAgG,2B,SCDnFA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAV,E,kBCIpBC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXN,GAAWO,EAAAA,EAAAA,IAAYT,GAUvBU,EAAc,SAAAC,GACMT,EAASU,MAC/B,qBAAGC,KAAgBC,gBAAkBH,EAAQE,KAAKC,aAAlD,IAIAC,MAAM,GAAD,OAAIJ,EAAQE,KAAZ,iCAELN,GAASS,EAAAA,EAAAA,IAAWL,GAEvB,EAED,OACE,kBAAMM,SArBa,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXR,EAAOO,EAAKE,SAAST,KAAKU,MAC1BC,EAASJ,EAAKE,SAASE,OAAOD,MACpCb,EAAY,CAAEc,OAAAA,EAAQX,KAAAA,IACtBO,EAAKK,OACN,EAc+BC,UAAWC,EAAzC,WACE,gBAAKD,UAAWC,EAAhB,UACE,kBACEC,KAAK,OACLf,KAAK,OACLgB,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,kBAGhB,gBAAKN,UAAWC,EAAhB,UACE,kBACEC,KAAK,MACLf,KAAK,SACLgB,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,0BAGhB,mBAAQJ,KAAK,SAASF,UAAWC,EAAjC,2BAKL,ECxDD,EAA4B,6BAA5B,EAAiE,yB,SCAjE,EAAwB,6BAAxB,EAA6D,6BCKhDM,EAAgB,WAC3B,IAAM1B,GAAWC,EAAAA,EAAAA,MACXe,GAAQd,EAAAA,EAAAA,IAAYL,GAK1B,OACE,iCACE,eAAIsB,UAAWC,EAAf,oCACA,gBAAKD,UAAWC,EAAhB,UACE,kBACEC,KAAK,OACLL,MAAOA,EACPW,SAXc,SAAAhB,GACpB,IAAQK,EAAUL,EAAIG,cAAdE,MACRhB,GAAS4B,EAAAA,EAAAA,GAAUZ,GACpB,EASOS,YAAY,mBAKrB,ECzBD,EAA2B,8BAA3B,EAAoE,8BAApE,EAA2G,4BCM9FI,EAAc,WACzB,IAAM7B,GAAWC,EAAAA,EAAAA,MAIXH,GAASI,EAAAA,EAAAA,IAAYL,GACrBF,GAAWO,EAAAA,EAAAA,IAAYT,IAC7BqC,EAAAA,EAAAA,YAAU,WACR9B,GAAS+B,EAAAA,EAAAA,MACV,GAAE,CAAC/B,IAEJ,IAOMgC,EAPmB,WACvB,IAAMC,EAAkBnC,EAAOoC,oBAC/B,OAAOvC,EAASG,QAAO,qBAAGQ,KACnB4B,oBAAoBC,SAASF,EADb,GAGxB,CAEqBG,GAEtB,OACE,eAAIjB,UAAWC,EAAf,SACGY,EAAcK,KAAI,YAAkC,IAA/BC,EAA8B,EAA9BA,GAAIhC,EAA0B,EAA1BA,KAAMW,EAAoB,EAApBA,OAAQsB,EAAY,EAAZA,MACtC,OACE,gBAAapB,UAAWC,EAAxB,WACE,4BACGd,EADH,KACWW,EADX,IACoBsB,MAEpB,mBACElB,KAAK,SACLmB,QAAS,kBA5BG,SAAAF,GACtBtC,GAASyC,EAAAA,EAAAA,IAAcH,GACxB,CA0B0BI,CAAgBJ,EAAtB,EACTnB,UAAWC,EAHb,sBAJOkB,EAaZ,KAGN,EC7BD,EAbkB,WAChB,OACE,+BACE,iBAAKnB,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,wBACA,SAACrB,EAAD,KACA,eAAIoB,UAAWC,EAAf,uBACA,SAACM,EAAD,KACA,SAACG,EAAD,QAIP,C","sources":["webpack://react-homework-template/./src/components/FormContacts/FormContact.module.css?f4ea","redux/contacts/selectors.js","components/FormContacts/FormContacts.jsx","webpack://react-homework-template/./src/pages/Phonebook/Phonebook.module.css?1c37","webpack://react-homework-template/./src/components/FilterContact/FilterContact.module.css?d984","components/FilterContact/FilterContact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"forma\":\"FormContact_forma__8XzAB\",\"button\":\"FormContact_button__TK-W0\",\"label\":\"FormContact_label__K0O3V\"};","export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n","import React from 'react';\nimport css from './FormContact.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const FormContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    addContacts({ number, name });\n    form.reset();\n  };\n  const addContacts = contact => {\n    const existingContact = contacts.some(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (existingContact) {\n      alert(`${contact.name} name is already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n  };\n  // console.log(contacts);\n  return (\n    <form onSubmit={handleSubmit} className={css.forma}>\n      <div className={css.label}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n        />\n      </div>\n      <div className={css.label}>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\"\n        />\n      </div>\n      <button type=\"submit\" className={css.button}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__LkQx3\",\"title\":\"Phonebook_title__8U+0x\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"FilterContact_title__CoUaS\",\"label\":\"FilterContact_label__fg+il\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from './FilterContact.module.css';\n\nexport const FilterContact = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n  const onInputChange = evt => {\n    const { value } = evt.currentTarget;\n    dispatch(setFilter(value));\n  };\n  return (\n    <>\n      <h3 className={css.title}>Find contacts by name</h3>\n      <div className={css.label}>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onInputChange}\n          placeholder=\"Enter name\"\n        />\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listname\":\"ContactList_listname__4GNaw\",\"listitem\":\"ContactList_listitem__UlO0Q\",\"button\":\"ContactList_button__7kL4l\"};","import { useSelector, useDispatch } from 'react-redux';\nimport css from './ContactList.module.css';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContact } from 'redux/contacts/operations';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  const getFilterContact = () => {\n    const normalazeFilter = filter.toLocaleLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(normalazeFilter)\n    );\n  };\n\n  const filterContact = getFilterContact();\n\n  return (\n    <ul className={css.listname}>\n      {filterContact.map(({ id, name, number, phone }) => {\n        return (\n          <li key={id} className={css.listitem}>\n            <span>\n              {name}: {number} {phone}\n            </span>\n            <button\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n              className={css.button}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { FormContacts } from 'components/FormContacts/FormContacts';\nimport css from './Phonebook.module.css';\nimport { FilterContact } from 'components/FilterContact/FilterContact';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst Phonebook = () => {\n  return (\n    <>\n      <div className={css.container}>\n        <h1 className={css.title}>Phonebook</h1>\n        <FormContacts />\n        <h2 className={css.title}>Contacts</h2>\n        <FilterContact />\n        <ContactList />\n      </div>\n    </>\n  );\n};\nexport default Phonebook;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","FormContacts","dispatch","useDispatch","useSelector","addContacts","contact","some","name","toLowerCase","alert","addContact","onSubmit","evt","preventDefault","form","currentTarget","elements","value","number","reset","className","css","type","pattern","title","required","placeholder","FilterContact","onChange","setFilter","ContactList","useEffect","fetchContact","filterContact","normalazeFilter","toLocaleLowerCase","includes","getFilterContact","map","id","phone","onClick","deleteContact","onDeleteContact"],"sourceRoot":""}